//
//  OpenDoorWireframe.swift
//  Door Opener
//
//  Created by Luka Usalj on 16/05/16.
//  Copyright (c) 2016 FER. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import Foundation
import UIKit

struct OpenDoorContext {
}

final class OpenDoorWireframe: NSObject {
    
    // MARK: - Private properties -
    private var _context: OpenDoorContext?
    private let _storyboard: UIStoryboard = UIStoryboard(name: "OpenDoor", bundle: nil)
    
    // MARK: - Public properties -
    weak var tabBarController: UITabBarController?
    weak var navigationController: UINavigationController?
    weak var viewController: UIViewController?
    
    // MARK: - Init -
    private override init() {}

    init(context: OpenDoorContext? = nil, navigationController: UINavigationController? = nil) {
        super.init()
        self._context = context
        self.navigationController = navigationController
    }
    
    // MARK: - Module setup -
    func instantiateAndConfigureModule() -> UIViewController {
        let moduleViewController = _storyboard.instantiateViewControllerWithIdentifier("OpenDoorViewController") as! OpenDoorViewController
        configureModuleWith(moduleViewController)
        viewController = moduleViewController
        return moduleViewController
    }
    
    func configureModuleWith(viewController: OpenDoorViewController) {
        let interactor = OpenDoorInteractor()
        let presenter = OpenDoorPresenter(wireframe: self, view: viewController, interactor: interactor)
        viewController.presenter = presenter
    }
}

// MARK: - OpenDoor Wireframe Interface Requirements -
extension OpenDoorWireframe: OpenDoorWireframeInterface {
    
    func performNavigationAction(action: OpenDoorNavigationAction) {
        switch action {
        case .EnterRoom:
            let enteredRoomWireframe = EnteredRoomWireframe()
            enteredRoomWireframe.tabBarController = tabBarController
            enteredRoomWireframe.setViewInTabBarController()

        case .GoToLoginScreen:
            let loginWireframe = LoginWireframe()
            loginWireframe.tabBarController = tabBarController
            loginWireframe.setViewInTabBarController()
        }
    }
}